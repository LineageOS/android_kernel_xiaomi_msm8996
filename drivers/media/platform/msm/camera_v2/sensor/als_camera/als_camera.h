/***************************************************************************************
 * als_camera.h, head file of imx268 ALS feature.
 *
 * It's a file node, implement get als_data from imx268 sensor and some tuning interface
 * implement, so user space can tuning through /sys/class/als_camera/als.
 *
 * Copyright (c) 2016 Xiaomi Technologies, Inc.  All rights reserved.
 **************************************************************************************/
#ifndef __ALS_CAMERA_H__
#define __ALS_CAMERA_H__
#include <linux/string.h>
#include <linux/stat.h>
#include <linux/fcntl.h>
#include <linux/kernel.h>
#include <linux/ioctl.h>
#include <linux/unistd.h>
#include <linux/initrd.h>
#include <linux/types.h>
#include <linux/init.h>
#include <linux/fs.h>
#include <linux/cdev.h>
#include <linux/module.h>
#include <linux/platform_device.h>
#include <linux/poll.h>
#include <linux/time.h>
#include <linux/workqueue.h>
#include <linux/i2c.h>
#include <linux/gpio.h>
#include <soc/qcom/camera2.h>
#include <media/v4l2-subdev.h>
#include <media/msmb_camera.h>
#include <linux/module.h>
#include <linux/of_gpio.h>
#include <linux/delay.h>
#include <linux/crc32.h>
#include "msm_camera_i2c.h"
#include "msm_camera_spi.h"
#include "msm_camera_io_util.h"
#include "msm_camera_dt_util.h"
#include "msm_sd.h"
#include "msm_cci.h"


#define TAG_LOG "als_camera"


#define CAMERA_ALS_TEST /* enable test and debug port */

#ifdef ALS_CAMERA_DEBUG
#ifndef ALS_PRI_D
#define ALS_PRI_D printk
#endif
#else
#ifndef ALS_PRI_D
#define ALS_PRI_D(fmt, args...)
#endif
#endif /* ALS_CAMERA_DEBUG */

#ifndef ALS_PRI_E
#define ALS_PRI_E printk
#endif

#define CAMERA_ALS_MAGIC_NUM  's'
#define CAMERA_ALS_PRIVATE    188

#define CAMERA_ALS_IOCTL_CMD_OPEN \
	_IOR(CAMERA_ALS_MAGIC_NUM, CAMERA_ALS_PRIVATE + 1, int)
#define CAMERA_ALS_IOCTL_CMD_CLOSE \
	_IOR(CAMERA_ALS_MAGIC_NUM, CAMERA_ALS_PRIVATE + 2, int)
#define CAMERA_ALS_IOCTL_CMD_DEBUG_TIMER \
	_IOWR(CAMERA_ALS_MAGIC_NUM, CAMERA_ALS_PRIVATE + 3, int)
#define CAMERA_ALS_IOCTL_CMD_DEBUG_SAMP_AREA \
	_IOWR(CAMERA_ALS_MAGIC_NUM, CAMERA_ALS_PRIVATE + 4, int)
#define CAMERA_ALS_IOCTL_CMD_DEBUG_SAMP_FREQ \
	_IOWR(CAMERA_ALS_MAGIC_NUM, CAMERA_ALS_PRIVATE + 5, int)
#define CAMERA_ALS_IOCTL_CMD_DEBUG_SAMP_ACCUR \
	_IOWR(CAMERA_ALS_MAGIC_NUM, CAMERA_ALS_PRIVATE + 6, int)

/* each 500ms read data once */
#define TIME_OUT (HZ/2)

/* define als board information struct */
struct als_board_info_t {
	const char *als_name;
	uint16_t i2c_addr;
	struct msm_camera_power_ctrl_t als_power_info;
};

/* define als ctrl struct */
struct camera_als_ctrl_t {
	uint32_t subdev_id;
	struct platform_device *pdev;
	struct mutex *als_mutex;
	struct v4l2_subdev als_v4l2_sudev;
	struct v4l2_subdev_ops *als_v4l2_subdev_ops;
	struct als_board_info_t *als_board_info;
	struct msm_camera_i2c_client als_i2c_client;
	enum msm_camera_device_type_t als_device_type;
	enum cci_i2c_master_t als_i2c_master;
};

struct msm_camera_i2c_reg_setting als_init_reg_setting;

/* sensor init setting */
struct msm_camera_i2c_reg_array als_init_setting_array[] = {
	{0x0100, 0x00, 0x01},
	{0x3200, 0x00, 0x01},
	{0xF800, 0x6A, 0x00},
	{0xF801, 0x6A, 0x00},
	{0xF802, 0x8E, 0x00},
	{0xF803, 0x56, 0x00},
	{0xF804, 0x55, 0x00},
	{0xF805, 0x00, 0x00},
	{0xF806, 0x2F, 0x00},
	{0xF807, 0x00, 0x00},
	{0xF808, 0xF8, 0x00},
	{0xF809, 0xA4, 0x00},
	{0xF80A, 0xF1, 0x00},
	{0xF80B, 0x7D, 0x00},
	{0xF80C, 0x00, 0x00},
	{0xF80D, 0x00, 0x00},
	{0xF80E, 0x00, 0x00},
	{0xF80F, 0x00, 0x00},
	{0xF810, 0x00, 0x00},
	{0xF811, 0x00, 0x00},
	{0xF812, 0x00, 0x00},
	{0xF813, 0x00, 0x00},
	{0xF814, 0x00, 0x00},
	{0xF815, 0x00, 0x00},
	{0xF816, 0x00, 0x00},
	{0xF817, 0x00, 0x00},
	{0xF818, 0x00, 0x00},
	{0xF819, 0x00, 0x00},
	{0xF81A, 0x00, 0x00},
	{0xF81B, 0x00, 0x00},
	{0xF81C, 0x00, 0x00},
	{0xF81D, 0x00, 0x00},
	{0xF81E, 0x00, 0x00},
	{0xF81F, 0x00, 0x00},
	{0xF820, 0x00, 0x00},
	{0xF821, 0x00, 0x00},
	{0xF822, 0x00, 0x00},
	{0xF823, 0x00, 0x00},
	{0xF824, 0x00, 0x00},
	{0xF825, 0x00, 0x00},
	{0xF826, 0x00, 0x00},
	{0xF827, 0x00, 0x00},
	{0xF828, 0x00, 0x00},
	{0xF829, 0x00, 0x00},
	{0xF82A, 0x00, 0x00},
	{0xF82B, 0x00, 0x00},
	{0xF82C, 0x00, 0x00},
	{0xF82D, 0x00, 0x00},
	{0xF82E, 0x00, 0x00},
	{0xF82F, 0x00, 0x00},
	{0xF830, 0x00, 0x00},
	{0xF831, 0x00, 0x00},
	{0xF832, 0x00, 0x00},
	{0xF833, 0x00, 0x00},
	{0xF834, 0x00, 0x00},
	{0xF835, 0x00, 0x00},
	{0xF836, 0x00, 0x00},
	{0xF837, 0x00, 0x00},
	{0xF838, 0x00, 0x00},
	{0xF839, 0x00, 0x00},
	{0xF83A, 0x00, 0x00},
	{0xF83B, 0x00, 0x00},
	{0xF83C, 0x00, 0x00},
	{0xF83D, 0x00, 0x00},
	{0xF83E, 0x00, 0x00},
	{0xF83F, 0x00, 0x00},
	{0xF840, 0x00, 0x00},
	{0xF841, 0x00, 0x00},
	{0xF842, 0x00, 0x00},
	{0xF843, 0x00, 0x00},
	{0xF844, 0x40, 0x00},
	{0xF845, 0xBA, 0x00},
	{0xF846, 0x70, 0x00},
	{0xF847, 0x47, 0x00},
	{0xF848, 0xC0, 0x00},
	{0xF849, 0xBA, 0x00},
	{0xF84A, 0x70, 0x00},
	{0xF84B, 0x47, 0x00},
	{0xF84C, 0xFF, 0x00},
	{0xF84D, 0xB4, 0x00},
	{0xF84E, 0x00, 0x00},
	{0xF84F, 0xF0, 0x00},
	{0xF850, 0x03, 0x00},
	{0xF851, 0xF8, 0x00},
	{0xF852, 0xFF, 0x00},
	{0xF853, 0xBC, 0x00},
	{0xF854, 0x82, 0x00},
	{0xF855, 0xF6, 0x00},
	{0xF856, 0x56, 0x00},
	{0xF857, 0xFF, 0x00},
	{0xF858, 0x10, 0x00},
	{0xF859, 0xB5, 0x00},
	{0xF85A, 0x05, 0x00},
	{0xF85B, 0x48, 0x00},
	{0xF85C, 0x40, 0x00},
	{0xF85D, 0x78, 0x00},
	{0xF85E, 0x00, 0x00},
	{0xF85F, 0x28, 0x00},
	{0xF860, 0x02, 0x00},
	{0xF861, 0xD0, 0x00},
	{0xF862, 0x84, 0x00},
	{0xF863, 0xF6, 0x00},
	{0xF864, 0xF9, 0x00},
	{0xF865, 0xFB, 0x00},
	{0xF866, 0x10, 0x00},
	{0xF867, 0xBD, 0x00},
	{0xF868, 0x00, 0x00},
	{0xF869, 0xF0, 0x00},
	{0xF86A, 0x04, 0x00},
	{0xF86B, 0xF8, 0x00},
	{0xF86C, 0x10, 0x00},
	{0xF86D, 0xBD, 0x00},
	{0xF86E, 0x00, 0x00},
	{0xF86F, 0x00, 0x00},
	{0xF870, 0x00, 0x00},
	{0xF871, 0x18, 0x00},
	{0xF872, 0x15, 0x00},
	{0xF873, 0x60, 0x00},
	{0xF874, 0xF8, 0x00},
	{0xF875, 0xB5, 0x00},
	{0xF876, 0x12, 0x00},
	{0xF877, 0x4A, 0x00},
	{0xF878, 0x10, 0x00},
	{0xF879, 0x4E, 0x00},
	{0xF87A, 0x20, 0x00},
	{0xF87B, 0x32, 0x00},
	{0xF87C, 0x00, 0x00},
	{0xF87D, 0x24, 0x00},
	{0xF87E, 0x10, 0x00},
	{0xF87F, 0x4B, 0x00},
	{0xF880, 0x25, 0x00},
	{0xF881, 0x46, 0x00},
	{0xF882, 0x20, 0x00},
	{0xF883, 0x46, 0x00},
	{0xF884, 0x37, 0x00},
	{0xF885, 0x88, 0x00},
	{0xF886, 0x19, 0x00},
	{0xF887, 0x88, 0x00},
	{0xF888, 0xB9, 0x00},
	{0xF889, 0x42, 0x00},
	{0xF88A, 0x02, 0x00},
	{0xF88B, 0xD2, 0x00},
	{0xF88C, 0x01, 0x00},
	{0xF88D, 0x21, 0x00},
	{0xF88E, 0x81, 0x00},
	{0xF88F, 0x40, 0x00},
	{0xF890, 0x0C, 0x00},
	{0xF891, 0x43, 0x00},
	{0xF892, 0x11, 0x00},
	{0xF893, 0x88, 0x00},
	{0xF894, 0xB9, 0x00},
	{0xF895, 0x42, 0x00},
	{0xF896, 0x02, 0x00},
	{0xF897, 0xD9, 0x00},
	{0xF898, 0x01, 0x00},
	{0xF899, 0x21, 0x00},
	{0xF89A, 0x81, 0x00},
	{0xF89B, 0x40, 0x00},
	{0xF89C, 0x0D, 0x00},
	{0xF89D, 0x43, 0x00},
	{0xF89E, 0xB6, 0x00},
	{0xF89F, 0x1C, 0x00},
	{0xF8A0, 0x9B, 0x00},
	{0xF8A1, 0x1C, 0x00},
	{0xF8A2, 0x92, 0x00},
	{0xF8A3, 0x1C, 0x00},
	{0xF8A4, 0x40, 0x00},
	{0xF8A5, 0x1C, 0x00},
	{0xF8A6, 0x10, 0x00},
	{0xF8A7, 0x28, 0x00},
	{0xF8A8, 0xEC, 0x00},
	{0xF8A9, 0xDB, 0x00},
	{0xF8AA, 0x81, 0x00},
	{0xF8AB, 0xF6, 0x00},
	{0xF8AC, 0xCF, 0x00},
	{0xF8AD, 0xFE, 0x00},
	{0xF8AE, 0x2C, 0x00},
	{0xF8AF, 0x43, 0x00},
	{0xF8B0, 0x04, 0x00},
	{0xF8B1, 0x40, 0x00},
	{0xF8B2, 0x02, 0x00},
	{0xF8B3, 0x48, 0x00},
	{0xF8B4, 0x20, 0x00},
	{0xF8B5, 0x30, 0x00},
	{0xF8B6, 0x04, 0x00},
	{0xF8B7, 0x80, 0x00},
	{0xF8B8, 0xF8, 0x00},
	{0xF8B9, 0xBD, 0x00},
	{0xF8BA, 0x00, 0x00},
	{0xF8BB, 0x00, 0x00},
	{0xF8BC, 0x00, 0x00},
	{0xF8BD, 0x20, 0x00},
	{0xF8BE, 0x4D, 0x00},
	{0xF8BF, 0x80, 0x00},
	{0xF8C0, 0x00, 0x00},
	{0xF8C1, 0x20, 0x00},
	{0xF8C2, 0x54, 0x00},
	{0xF8C3, 0x40, 0x00},
	{0x4E29, 0x01, 0x00},
	{0x3202, 0x00, 0x00}, /* set timing */
	{0x3203, 0x21, 0x00},
	{0x3290, 0xA0, 0x00},
	{0x3291, 0x00, 0x00},
	{0x0304, 0x03, 0x00},
	{0x3201, 0x00, 0x00}, /* set caiculation area 4X4 */
	{0x3200, 0x01, 0x00}, /* start ALS */
};
#endif
